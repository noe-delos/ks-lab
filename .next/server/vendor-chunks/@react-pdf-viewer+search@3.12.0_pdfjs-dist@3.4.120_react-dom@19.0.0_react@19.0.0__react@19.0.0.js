"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-pdf-viewer+search@3.12.0_pdfjs-dist@3.4.120_react-dom@19.0.0_react@19.0.0__react@19.0.0";
exports.ids = ["vendor-chunks/@react-pdf-viewer+search@3.12.0_pdfjs-dist@3.4.120_react-dom@19.0.0_react@19.0.0__react@19.0.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@react-pdf-viewer+search@3.12.0_pdfjs-dist@3.4.120_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@react-pdf-viewer/search/lib/cjs/search.js":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-pdf-viewer+search@3.12.0_pdfjs-dist@3.4.120_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@react-pdf-viewer/search/lib/cjs/search.js ***!
  \***********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"(ssr)/./node_modules/.pnpm/@react-pdf-viewer+core@3.12.0_pdfjs-dist@3.4.120_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.1.3_@babel+core@7.26.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\nfunction _interopNamespaceDefault(e) {\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n.default = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);\n\nvar NextIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M0.541,5.627L11.666,18.2c0.183,0.207,0.499,0.226,0.706,0.043c0.015-0.014,0.03-0.028,0.043-0.043\\n            L23.541,5.627\" }))); };\n\nvar PreviousIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M23.535,18.373L12.409,5.8c-0.183-0.207-0.499-0.226-0.706-0.043C11.688,5.77,11.674,5.785,11.66,5.8\\n            L0.535,18.373\" }))); };\n\nvar SearchIcon = function () { return (React__namespace.createElement(core.Icon, { ignoreDirection: true, size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M10.5,0.5c5.523,0,10,4.477,10,10s-4.477,10-10,10s-10-4.477-10-10S4.977,0.5,10.5,0.5z\\n            M23.5,23.5\\n            l-5.929-5.929\" }))); };\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar EMPTY_KEYWORD_REGEXP = {\n    keyword: '',\n    regExp: new RegExp(' '),\n    wholeWords: false,\n};\n\nvar calculateOffset = function (children, parent) {\n    var top = children.offsetTop;\n    var left = children.offsetLeft;\n    var p = children.parentElement;\n    while (p && p !== parent) {\n        top += p.offsetTop;\n        left += p.offsetLeft;\n        p = p.parentElement;\n    }\n    return {\n        left: left,\n        top: top,\n    };\n};\n\nvar getCssProperties = function (area) {\n    return {\n        left: \"\".concat(area.left, \"%\"),\n        top: \"\".concat(area.top, \"%\"),\n        height: \"\".concat(area.height, \"%\"),\n        width: \"\".concat(area.width, \"%\"),\n    };\n};\n\nvar HightlightItem = function (_a) {\n    var index = _a.index, area = _a.area, onHighlightKeyword = _a.onHighlightKeyword;\n    var containerRef = React__namespace.useRef();\n    core.useIsomorphicLayoutEffect(function () {\n        var highlightEle = containerRef.current;\n        if (onHighlightKeyword && highlightEle) {\n            onHighlightKeyword({\n                highlightEle: highlightEle,\n                keyword: area.keyword,\n            });\n        }\n    }, []);\n    return (React__namespace.createElement(\"div\", { className: \"rpv-search__highlight\", \"data-index\": index, ref: containerRef, style: getCssProperties(area), title: area.keywordStr.trim() }));\n};\n\nvar removeNode = function (ele) {\n    var parent = ele.parentNode;\n    if (parent) {\n        parent.removeChild(ele);\n    }\n};\nvar replaceNode = function (replacementNode, node) {\n    removeNode(replacementNode);\n    var parent = node.parentNode;\n    if (parent) {\n        parent.insertBefore(replacementNode, node);\n    }\n    removeNode(node);\n};\nvar unwrap = function (ele) {\n    var parent = ele.parentNode;\n    if (!parent) {\n        return;\n    }\n    var range = document.createRange();\n    range.selectNodeContents(ele);\n    replaceNode(range.extractContents(), ele);\n    parent.normalize();\n};\n\nvar sortHighlightPosition = function (a, b) {\n    if (a.top < b.top) {\n        return -1;\n    }\n    if (a.top > b.top) {\n        return 1;\n    }\n    if (a.left < b.left) {\n        return -1;\n    }\n    if (a.left > b.left) {\n        return 1;\n    }\n    return 0;\n};\nvar Highlights = function (_a) {\n    var numPages = _a.numPages, pageIndex = _a.pageIndex, renderHighlights = _a.renderHighlights, store = _a.store, onHighlightKeyword = _a.onHighlightKeyword;\n    var containerRef = React__namespace.useRef();\n    var defaultRenderHighlights = React__namespace.useCallback(function (renderProps) { return (React__namespace.createElement(React__namespace.Fragment, null, renderProps.highlightAreas.map(function (area, index) { return (React__namespace.createElement(HightlightItem, { index: index, key: index, area: area, onHighlightKeyword: onHighlightKeyword })); }))); }, []);\n    var renderHighlightElements = renderHighlights || defaultRenderHighlights;\n    var _b = React__namespace.useState(store.get('matchPosition')), matchPosition = _b[0], setMatchPosition = _b[1];\n    var _c = React__namespace.useState(store.get('keyword') || [EMPTY_KEYWORD_REGEXP]), keywordRegexp = _c[0], setKeywordRegexp = _c[1];\n    var _d = React__namespace.useState({\n        pageIndex: pageIndex,\n        scale: 1,\n        status: core.LayerRenderStatus.PreRender,\n    }), renderStatus = _d[0], setRenderStatus = _d[1];\n    var currentMatchRef = React__namespace.useRef(null);\n    var characterIndexesRef = React__namespace.useRef([]);\n    var _e = React__namespace.useState([]), highlightAreas = _e[0], setHighlightAreas = _e[1];\n    var defaultTargetPageFilter = function () { return true; };\n    var targetPageFilter = React__namespace.useCallback(function () { return store.get('targetPageFilter') || defaultTargetPageFilter; }, [store.get('targetPageFilter')]);\n    var highlight = function (keywordStr, keyword, textLayerEle, span, charIndexSpan) {\n        var range = document.createRange();\n        var firstChild = span.firstChild;\n        if (!firstChild || firstChild.nodeType !== Node.TEXT_NODE) {\n            return null;\n        }\n        var length = firstChild.textContent.length;\n        var startOffset = charIndexSpan[0].charIndexInSpan;\n        var endOffset = charIndexSpan.length === 1 ? startOffset : charIndexSpan[charIndexSpan.length - 1].charIndexInSpan;\n        if (startOffset > length || endOffset + 1 > length) {\n            return null;\n        }\n        range.setStart(firstChild, startOffset);\n        range.setEnd(firstChild, endOffset + 1);\n        var wrapper = document.createElement('span');\n        range.surroundContents(wrapper);\n        var wrapperRect = wrapper.getBoundingClientRect();\n        var textLayerRect = textLayerEle.getBoundingClientRect();\n        var pageHeight = textLayerRect.height;\n        var pageWidth = textLayerRect.width;\n        var left = (100 * (wrapperRect.left - textLayerRect.left)) / pageWidth;\n        var top = (100 * (wrapperRect.top - textLayerRect.top)) / pageHeight;\n        var height = (100 * wrapperRect.height) / pageHeight;\n        var width = (100 * wrapperRect.width) / pageWidth;\n        unwrap(wrapper);\n        return {\n            keyword: keyword,\n            keywordStr: keywordStr,\n            numPages: numPages,\n            pageIndex: pageIndex,\n            left: left,\n            top: top,\n            height: height,\n            width: width,\n            pageHeight: pageHeight,\n            pageWidth: pageWidth,\n        };\n    };\n    var highlightAll = function (textLayerEle) {\n        var charIndexes = characterIndexesRef.current;\n        if (charIndexes.length === 0) {\n            return [];\n        }\n        var highlightPos = [];\n        var spans = [].slice.call(textLayerEle.querySelectorAll('.rpv-core__text-layer-text'));\n        var fullText = charIndexes.map(function (item) { return item.char; }).join('');\n        keywordRegexp.forEach(function (keyword) {\n            var keywordStr = keyword.keyword;\n            if (!keywordStr.trim()) {\n                return;\n            }\n            var cloneKeyword = keyword.regExp.flags.indexOf('g') === -1\n                ? new RegExp(keyword.regExp, \"\".concat(keyword.regExp.flags, \"g\"))\n                : keyword.regExp;\n            var match;\n            var matches = [];\n            while ((match = cloneKeyword.exec(fullText)) !== null) {\n                matches.push({\n                    keyword: cloneKeyword,\n                    startIndex: match.index,\n                    endIndex: cloneKeyword.lastIndex,\n                });\n            }\n            matches\n                .map(function (item) { return ({\n                keyword: item.keyword,\n                indexes: charIndexes.slice(item.startIndex, item.endIndex),\n            }); })\n                .forEach(function (item) {\n                var spanIndexes = item.indexes.reduce(function (acc, item) {\n                    acc[item.spanIndex] = (acc[item.spanIndex] || []).concat([item]);\n                    return acc;\n                }, {});\n                Object.values(spanIndexes).forEach(function (charIndexSpan) {\n                    if (charIndexSpan.length !== 1 || charIndexSpan[0].char.trim() !== '') {\n                        var normalizedCharSpan = keyword.wholeWords ? charIndexSpan.slice(1, -1) : charIndexSpan;\n                        var hightlighPosition = highlight(keywordStr, item.keyword, textLayerEle, spans[normalizedCharSpan[0].spanIndex], normalizedCharSpan);\n                        if (hightlighPosition) {\n                            highlightPos.push(hightlighPosition);\n                        }\n                    }\n                });\n            });\n        });\n        return highlightPos.sort(sortHighlightPosition);\n    };\n    var handleKeywordChanged = function (keyword) {\n        if (keyword && keyword.length > 0) {\n            setKeywordRegexp(keyword);\n        }\n    };\n    var handleMatchPositionChanged = function (currentPosition) { return setMatchPosition(currentPosition); };\n    var handleRenderStatusChanged = function (status) {\n        if (!status.has(pageIndex)) {\n            return;\n        }\n        var currentStatus = status.get(pageIndex);\n        if (currentStatus) {\n            setRenderStatus({\n                ele: currentStatus.ele,\n                pageIndex: pageIndex,\n                scale: currentStatus.scale,\n                status: currentStatus.status,\n            });\n        }\n    };\n    var isEmptyKeyword = function () {\n        return keywordRegexp.length === 0 || (keywordRegexp.length === 1 && keywordRegexp[0].keyword.trim() === '');\n    };\n    React__namespace.useEffect(function () {\n        if (isEmptyKeyword() ||\n            renderStatus.status !== core.LayerRenderStatus.DidRender ||\n            characterIndexesRef.current.length) {\n            return;\n        }\n        var textLayerEle = renderStatus.ele;\n        var spans = [].slice.call(textLayerEle.querySelectorAll('.rpv-core__text-layer-text'));\n        var charIndexes = spans\n            .map(function (span) { return span.textContent; })\n            .reduce(function (prev, curr, index) {\n            return prev.concat(curr.split('').map(function (c, i) { return ({\n                char: c,\n                charIndexInSpan: i,\n                spanIndex: index,\n            }); }));\n        }, [\n            {\n                char: '',\n                charIndexInSpan: 0,\n                spanIndex: 0,\n            },\n        ])\n            .slice(1);\n        characterIndexesRef.current = charIndexes;\n    }, [keywordRegexp, renderStatus.status]);\n    React__namespace.useEffect(function () {\n        if (isEmptyKeyword() ||\n            !renderStatus.ele ||\n            renderStatus.status !== core.LayerRenderStatus.DidRender ||\n            !targetPageFilter()({ pageIndex: pageIndex, numPages: numPages })) {\n            return;\n        }\n        var textLayerEle = renderStatus.ele;\n        var highlightPos = highlightAll(textLayerEle);\n        setHighlightAreas(highlightPos);\n    }, [keywordRegexp, matchPosition, renderStatus.status, characterIndexesRef.current]);\n    React__namespace.useEffect(function () {\n        if (isEmptyKeyword() && renderStatus.ele && renderStatus.status === core.LayerRenderStatus.DidRender) {\n            setHighlightAreas([]);\n        }\n    }, [keywordRegexp, renderStatus.status]);\n    React__namespace.useEffect(function () {\n        if (highlightAreas.length === 0) {\n            return;\n        }\n        var container = containerRef.current;\n        if (matchPosition.pageIndex !== pageIndex ||\n            !container ||\n            renderStatus.status !== core.LayerRenderStatus.DidRender) {\n            return;\n        }\n        var highlightEle = container.querySelector(\".rpv-search__highlight[data-index=\\\"\".concat(matchPosition.matchIndex, \"\\\"]\"));\n        if (!highlightEle) {\n            return;\n        }\n        var _a = calculateOffset(highlightEle, container), left = _a.left, top = _a.top;\n        var jump = store.get('jumpToDestination');\n        if (jump) {\n            jump({\n                pageIndex: pageIndex,\n                bottomOffset: (container.getBoundingClientRect().height - top) / renderStatus.scale,\n                leftOffset: left / renderStatus.scale,\n                scaleTo: renderStatus.scale,\n            });\n            if (currentMatchRef.current) {\n                currentMatchRef.current.classList.remove('rpv-search__highlight--current');\n            }\n            currentMatchRef.current = highlightEle;\n            highlightEle.classList.add('rpv-search__highlight--current');\n        }\n    }, [highlightAreas, matchPosition]);\n    React__namespace.useEffect(function () {\n        store.subscribe('keyword', handleKeywordChanged);\n        store.subscribe('matchPosition', handleMatchPositionChanged);\n        store.subscribe('renderStatus', handleRenderStatusChanged);\n        return function () {\n            store.unsubscribe('keyword', handleKeywordChanged);\n            store.unsubscribe('matchPosition', handleMatchPositionChanged);\n            store.unsubscribe('renderStatus', handleRenderStatusChanged);\n        };\n    }, []);\n    return (React__namespace.createElement(\"div\", { className: \"rpv-search__highlights\", \"data-testid\": \"search__highlights-\".concat(pageIndex), ref: containerRef }, renderHighlightElements({\n        getCssProperties: getCssProperties,\n        highlightAreas: highlightAreas,\n    })));\n};\n\nvar escapeRegExp = function (input) { return input.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); };\nvar normalizeFlagKeyword = function (flagKeyword) {\n    var source = flagKeyword.wholeWords ? \" \".concat(flagKeyword.keyword, \" \") : flagKeyword.keyword;\n    var flags = flagKeyword.matchCase ? 'g' : 'gi';\n    return {\n        keyword: flagKeyword.keyword,\n        regExp: new RegExp(escapeRegExp(source), flags),\n        wholeWords: flagKeyword.wholeWords || false,\n    };\n};\nvar normalizeSingleKeyword = function (keyword, matchCase, wholeWords) {\n    if (keyword instanceof RegExp) {\n        return {\n            keyword: keyword.source,\n            regExp: keyword,\n            wholeWords: wholeWords || false,\n        };\n    }\n    if (typeof keyword === 'string') {\n        return keyword === ''\n            ? EMPTY_KEYWORD_REGEXP\n            : normalizeFlagKeyword({\n                keyword: keyword,\n                matchCase: matchCase || false,\n                wholeWords: wholeWords || false,\n            });\n    }\n    if (typeof matchCase !== 'undefined') {\n        keyword.matchCase = matchCase;\n    }\n    if (typeof wholeWords !== 'undefined') {\n        keyword.wholeWords = wholeWords;\n    }\n    return normalizeFlagKeyword(keyword);\n};\n\nvar useDocument = function (store) {\n    var currentDocRef = React__namespace.useRef(store.get('doc'));\n    var handleDocumentChanged = function (doc) {\n        currentDocRef.current = doc;\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('doc', handleDocumentChanged);\n        return function () {\n            store.unsubscribe('doc', handleDocumentChanged);\n        };\n    }, []);\n    return currentDocRef;\n};\n\nvar useSearch = function (store) {\n    var initialKeyword = store.get('initialKeyword');\n    var normalizedKeywordFlags = React__namespace.useMemo(function () {\n        if (initialKeyword && initialKeyword.length === 1) {\n            var normalizedKeyword = normalizeSingleKeyword(initialKeyword[0]);\n            return {\n                matchCase: normalizedKeyword.regExp.flags.indexOf('i') === -1,\n                wholeWords: normalizedKeyword.wholeWords,\n            };\n        }\n        else {\n            return {\n                matchCase: false,\n                wholeWords: false,\n            };\n        }\n    }, []);\n    var currentDocRef = useDocument(store);\n    var _a = React__namespace.useState(initialKeyword), keywords = _a[0], setKeywords = _a[1];\n    var _b = React__namespace.useState([]), found = _b[0], setFound = _b[1];\n    var _c = React__namespace.useState(0), currentMatch = _c[0], setCurrentMatch = _c[1];\n    var _d = React__namespace.useState(normalizedKeywordFlags.matchCase), matchCase = _d[0], setMatchCase = _d[1];\n    var textContents = React__namespace.useRef([]);\n    var _e = React__namespace.useState(normalizedKeywordFlags.wholeWords), wholeWords = _e[0], setWholeWords = _e[1];\n    var defaultTargetPageFilter = function () { return true; };\n    var targetPageFilter = React__namespace.useCallback(function () { return store.get('targetPageFilter') || defaultTargetPageFilter; }, [store.get('targetPageFilter')]);\n    var changeMatchCase = function (isChecked) {\n        setMatchCase(isChecked);\n        if (keywords.length > 0) {\n            searchFor(keywords, isChecked, wholeWords);\n        }\n    };\n    var changeWholeWords = function (isChecked) {\n        setWholeWords(isChecked);\n        if (keywords.length > 0) {\n            searchFor(keywords, matchCase, isChecked);\n        }\n    };\n    var jumpToMatch = function (index) {\n        var numMatches = found.length;\n        if (keywords.length === 0 || numMatches === 0) {\n            return null;\n        }\n        var normalizedIndex = index === numMatches + 1 ? 1 : Math.max(1, Math.min(numMatches, index));\n        setCurrentMatch(normalizedIndex);\n        return jumpToGivenMatch(found[normalizedIndex - 1]);\n    };\n    var jumpToPreviousMatch = function () { return jumpToMatch(currentMatch - 1); };\n    var jumpToNextMatch = function () { return jumpToMatch(currentMatch + 1); };\n    var clearKeyword = function () {\n        store.update('keyword', [EMPTY_KEYWORD_REGEXP]);\n        setKeyword('');\n        setCurrentMatch(0);\n        setFound([]);\n        setMatchCase(false);\n        setWholeWords(false);\n    };\n    var search = function () { return searchFor(keywords, matchCase, wholeWords); };\n    var setKeyword = function (keyword) { return setKeywords(keyword === '' ? [] : [keyword]); };\n    var setTargetPages = function (targetPageFilter) {\n        store.update('targetPageFilter', targetPageFilter);\n    };\n    var getTextContents = function () {\n        var currentDoc = currentDocRef.current;\n        if (!currentDoc) {\n            return Promise.resolve([]);\n        }\n        var promises = Array(currentDoc.numPages)\n            .fill(0)\n            .map(function (_, pageIndex) {\n            return core.getPage(currentDoc, pageIndex)\n                .then(function (page) {\n                return page.getTextContent();\n            })\n                .then(function (content) {\n                var pageContent = content.items.map(function (item) { return item.str || ''; }).join('');\n                return Promise.resolve({\n                    pageContent: pageContent,\n                    pageIndex: pageIndex,\n                });\n            });\n        });\n        return Promise.all(promises).then(function (data) {\n            data.sort(function (a, b) { return a.pageIndex - b.pageIndex; });\n            return Promise.resolve(data.map(function (item) { return item.pageContent; }));\n        });\n    };\n    var jumpToGivenMatch = function (match) {\n        var jumpToPage = store.get('jumpToPage');\n        if (jumpToPage) {\n            jumpToPage(match.pageIndex);\n        }\n        store.update('matchPosition', {\n            matchIndex: match.matchIndex,\n            pageIndex: match.pageIndex,\n        });\n        return match;\n    };\n    var getKeywordSource = function (keyword) {\n        if (keyword instanceof RegExp) {\n            return keyword.source;\n        }\n        if (typeof keyword === 'string') {\n            return keyword;\n        }\n        return keyword.keyword;\n    };\n    var searchFor = function (keywordParam, matchCaseParam, wholeWordsParam) {\n        var currentDoc = currentDocRef.current;\n        if (!currentDoc) {\n            return Promise.resolve([]);\n        }\n        var numPages = currentDoc.numPages;\n        var keywords = keywordParam.map(function (k) { return normalizeSingleKeyword(k, matchCaseParam, wholeWordsParam); });\n        store.update('keyword', keywords);\n        setCurrentMatch(0);\n        setFound([]);\n        return new Promise(function (resolve, _) {\n            var getTextPromise = textContents.current.length === 0\n                ? getTextContents().then(function (response) {\n                    textContents.current = response;\n                    return Promise.resolve(response);\n                })\n                : Promise.resolve(textContents.current);\n            getTextPromise.then(function (response) {\n                var arr = [];\n                response.forEach(function (pageText, pageIndex) {\n                    if (targetPageFilter()({ pageIndex: pageIndex, numPages: numPages })) {\n                        keywords.forEach(function (keyword) {\n                            var matchIndex = 0;\n                            var matches;\n                            while ((matches = keyword.regExp.exec(pageText)) !== null) {\n                                arr.push({\n                                    keyword: keyword.regExp,\n                                    matchIndex: matchIndex,\n                                    pageIndex: pageIndex,\n                                    pageText: pageText,\n                                    startIndex: matches.index,\n                                    endIndex: keyword.regExp.lastIndex,\n                                });\n                                matchIndex++;\n                            }\n                        });\n                    }\n                });\n                setFound(arr);\n                if (arr.length > 0) {\n                    setCurrentMatch(1);\n                    jumpToGivenMatch(arr[0]);\n                }\n                resolve(arr);\n            });\n        });\n    };\n    React__namespace.useEffect(function () {\n        textContents.current = [];\n    }, [currentDocRef.current]);\n    return {\n        clearKeyword: clearKeyword,\n        changeMatchCase: changeMatchCase,\n        changeWholeWords: changeWholeWords,\n        currentMatch: currentMatch,\n        jumpToMatch: jumpToMatch,\n        jumpToNextMatch: jumpToNextMatch,\n        jumpToPreviousMatch: jumpToPreviousMatch,\n        keywords: keywords,\n        matchCase: matchCase,\n        numberOfMatches: found.length,\n        wholeWords: wholeWords,\n        search: search,\n        searchFor: searchFor,\n        setKeywords: setKeywords,\n        keyword: keywords.length === 0 ? '' : getKeywordSource(keywords[0]),\n        setKeyword: setKeyword,\n        setTargetPages: setTargetPages,\n    };\n};\n\nvar Search = function (_a) {\n    var children = _a.children, store = _a.store;\n    var result = useSearch(store);\n    var _b = React__namespace.useState(false), isDocumentLoaded = _b[0], setDocumentLoaded = _b[1];\n    var handleDocumentChanged = function (_) { return setDocumentLoaded(true); };\n    React__namespace.useEffect(function () {\n        store.subscribe('doc', handleDocumentChanged);\n        return function () {\n            store.unsubscribe('doc', handleDocumentChanged);\n        };\n    }, []);\n    return children(__assign(__assign({}, result), { isDocumentLoaded: isDocumentLoaded }));\n};\n\nvar ShortcutHandler = function (_a) {\n    var containerRef = _a.containerRef, store = _a.store;\n    var isMouseInsideRef = React__namespace.useRef(false);\n    var handleMouseEnter = function () {\n        isMouseInsideRef.current = true;\n    };\n    var handleMouseLeave = function () {\n        isMouseInsideRef.current = false;\n    };\n    var handleKeydown = function (e) {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        if (e.shiftKey || e.altKey || e.key !== 'f') {\n            return;\n        }\n        var isCommandPressed = core.isMac() ? e.metaKey && !e.ctrlKey : e.ctrlKey;\n        if (!isCommandPressed) {\n            return;\n        }\n        if (isMouseInsideRef.current || (document.activeElement && containerEle.contains(document.activeElement))) {\n            e.preventDefault();\n            store.update('areShortcutsPressed', true);\n        }\n    };\n    React__namespace.useEffect(function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        document.addEventListener('keydown', handleKeydown);\n        containerEle.addEventListener('mouseenter', handleMouseEnter);\n        containerEle.addEventListener('mouseleave', handleMouseLeave);\n        return function () {\n            document.removeEventListener('keydown', handleKeydown);\n            containerEle.removeEventListener('mouseenter', handleMouseEnter);\n            containerEle.removeEventListener('mouseleave', handleMouseLeave);\n        };\n    }, [containerRef.current]);\n    return React__namespace.createElement(React__namespace.Fragment, null);\n};\n\nvar PORTAL_OFFSET$1 = { left: 0, top: 8 };\nvar SearchPopover = function (_a) {\n    var store = _a.store, onToggle = _a.onToggle;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var _b = React__namespace.useState(false), isQuerying = _b[0], setIsQuerying = _b[1];\n    var _c = React__namespace.useState(false), searchDone = _c[0], setSearchDone = _c[1];\n    var isRtl = direction === core.TextDirection.RightToLeft;\n    var _d = useSearch(store), clearKeyword = _d.clearKeyword, changeMatchCase = _d.changeMatchCase, changeWholeWords = _d.changeWholeWords, currentMatch = _d.currentMatch, jumpToNextMatch = _d.jumpToNextMatch, jumpToPreviousMatch = _d.jumpToPreviousMatch, keyword = _d.keyword, matchCase = _d.matchCase, numberOfMatches = _d.numberOfMatches, wholeWords = _d.wholeWords, search = _d.search, setKeyword = _d.setKeyword;\n    var performSearch = function (cb) {\n        setIsQuerying(true);\n        search().then(function (_) {\n            setIsQuerying(false);\n            setSearchDone(true);\n            cb && cb();\n        });\n    };\n    var onKeydownSearch = function (e) {\n        if (e.key === 'Enter' && keyword) {\n            searchDone ? jumpToNextMatch() : performSearch();\n        }\n    };\n    var onChangeMatchCase = function (e) {\n        setSearchDone(false);\n        changeMatchCase(e.target.checked);\n    };\n    var onChangeWholeWords = function (e) {\n        setSearchDone(false);\n        changeWholeWords(e.target.checked);\n    };\n    var onClose = function () {\n        onToggle();\n        clearKeyword();\n    };\n    var onChangeKeyword = function (value) {\n        setSearchDone(false);\n        setKeyword(value);\n    };\n    React__namespace.useEffect(function () {\n        var initialKeyword = store.get('initialKeyword');\n        if (initialKeyword && initialKeyword.length === 1 && keyword) {\n            performSearch(function () {\n                store.update('initialKeyword', []);\n            });\n        }\n    }, []);\n    var searchLabel = l10n && l10n.search ? l10n.search.enterToSearch : 'Enter to search';\n    var previousMatchLabel = l10n && l10n.search ? l10n.search.previousMatch : 'Previous match';\n    var nextMatchLabel = l10n && l10n.search ? l10n.search.nextMatch : 'Next match';\n    var closeButtonLabel = l10n && l10n.search ? l10n.search.close : 'Close';\n    return (React__namespace.createElement(\"div\", { className: \"rpv-search__popover\" },\n        React__namespace.createElement(\"div\", { className: \"rpv-search__popover-input-counter\" },\n            React__namespace.createElement(core.TextBox, { ariaLabel: searchLabel, autoFocus: true, placeholder: searchLabel, type: \"text\", value: keyword, onChange: onChangeKeyword, onKeyDown: onKeydownSearch }),\n            React__namespace.createElement(\"div\", { className: core.classNames({\n                    'rpv-search__popover-counter': true,\n                    'rpv-search__popover-counter--ltr': !isRtl,\n                    'rpv-search__popover-counter--rtl': isRtl,\n                }) },\n                isQuerying && React__namespace.createElement(core.Spinner, { testId: \"search__popover-searching\", size: \"1rem\" }),\n                !isQuerying && (React__namespace.createElement(\"span\", { \"data-testid\": \"search__popover-num-matches\" },\n                    currentMatch,\n                    \"/\",\n                    numberOfMatches)))),\n        React__namespace.createElement(\"label\", { className: \"rpv-search__popover-label\" },\n            React__namespace.createElement(\"input\", { className: \"rpv-search__popover-label-checkbox\", \"data-testid\": \"search__popover-match-case\", checked: matchCase, type: \"checkbox\", onChange: onChangeMatchCase }),\n            ' ',\n            l10n && l10n.search ? l10n.search.matchCase : 'Match case'),\n        React__namespace.createElement(\"label\", { className: \"rpv-search__popover-label\" },\n            React__namespace.createElement(\"input\", { className: \"rpv-search__popover-label-checkbox\", checked: wholeWords, \"data-testid\": \"search__popover-whole-words\", type: \"checkbox\", onChange: onChangeWholeWords }),\n            ' ',\n            l10n && l10n.search ? l10n.search.wholeWords : 'Whole words'),\n        React__namespace.createElement(\"div\", { className: \"rpv-search__popover-footer\" },\n            React__namespace.createElement(\"div\", { className: \"rpv-search__popover-footer-item\" },\n                React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"search-previous-match\", position: isRtl ? core.Position.BottomRight : core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: previousMatchLabel, isDisabled: currentMatch <= 1, onClick: jumpToPreviousMatch },\n                        React__namespace.createElement(PreviousIcon, null)), content: function () { return previousMatchLabel; }, offset: PORTAL_OFFSET$1 })),\n            React__namespace.createElement(\"div\", { className: \"rpv-search__popover-footer-item\" },\n                React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"search-next-match\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: nextMatchLabel, isDisabled: currentMatch > numberOfMatches - 1, onClick: jumpToNextMatch },\n                        React__namespace.createElement(NextIcon, null)), content: function () { return nextMatchLabel; }, offset: PORTAL_OFFSET$1 })),\n            React__namespace.createElement(\"div\", { className: core.classNames({\n                    'rpv-search__popover-footer-button': true,\n                    'rpv-search__popover-footer-button--ltr': !isRtl,\n                    'rpv-search__popover-footer-button--rtl': isRtl,\n                }) },\n                React__namespace.createElement(core.Button, { onClick: onClose }, closeButtonLabel)))));\n};\n\nvar ShowSearchPopoverDecorator = function (_a) {\n    var children = _a.children, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.search ? l10n.search.search : 'Search';\n    var icon = React__namespace.createElement(SearchIcon, null);\n    return children({ icon: icon, label: label, onClick: onClick });\n};\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar ShowSearchPopoverButton = function (_a) {\n    var enableShortcuts = _a.enableShortcuts, store = _a.store, onClick = _a.onClick;\n    var ariaKeyShortcuts = enableShortcuts ? (core.isMac() ? 'Meta+F' : 'Ctrl+F') : '';\n    var handleShortcutsPressed = function (areShortcutsPressed) {\n        if (areShortcutsPressed) {\n            onClick();\n        }\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('areShortcutsPressed', handleShortcutsPressed);\n        return function () {\n            store.unsubscribe('areShortcutsPressed', handleShortcutsPressed);\n        };\n    }, []);\n    return (React__namespace.createElement(ShowSearchPopoverDecorator, { onClick: onClick }, function (p) { return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"search-popover\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaKeyShortcuts: ariaKeyShortcuts, ariaLabel: p.label, testId: \"search__popover-button\", onClick: onClick }, p.icon), content: function () { return p.label; }, offset: TOOLTIP_OFFSET })); }));\n};\n\nvar PORTAL_OFFSET = { left: 0, top: 8 };\nvar ShowSearchPopover = function (_a) {\n    var children = _a.children, enableShortcuts = _a.enableShortcuts, store = _a.store;\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var portalPosition = direction === core.TextDirection.RightToLeft ? core.Position.BottomRight : core.Position.BottomLeft;\n    var defaultChildren = function (props) { return (React__namespace.createElement(ShowSearchPopoverButton, __assign({ enableShortcuts: enableShortcuts, store: store }, props))); };\n    var render = children || defaultChildren;\n    return (React__namespace.createElement(core.Popover, { ariaControlsSuffix: \"search\", lockScroll: false, position: portalPosition, target: function (toggle) {\n            return render({\n                onClick: toggle,\n            });\n        }, content: function (toggle) { return React__namespace.createElement(SearchPopover, { store: store, onToggle: toggle }); }, offset: PORTAL_OFFSET, closeOnClickOutside: false, closeOnEscape: true }));\n};\n\nvar normalizeKeywords = function (keyword) {\n    return Array.isArray(keyword) ? keyword.map(function (k) { return normalizeSingleKeyword(k); }) : [normalizeSingleKeyword(keyword)];\n};\nvar searchPlugin = function (props) {\n    var searchPluginProps = React__namespace.useMemo(function () { return Object.assign({}, { enableShortcuts: true, onHighlightKeyword: function () { } }, props); }, []);\n    var store = React__namespace.useMemo(function () {\n        return core.createStore({\n            initialKeyword: props && props.keyword ? (Array.isArray(props.keyword) ? props.keyword : [props.keyword]) : [],\n            keyword: props && props.keyword ? normalizeKeywords(props.keyword) : [EMPTY_KEYWORD_REGEXP],\n            matchPosition: {\n                matchIndex: -1,\n                pageIndex: -1,\n            },\n            renderStatus: new Map(),\n        });\n    }, []);\n    var _a = useSearch(store), clearKeyword = _a.clearKeyword, jumpToMatch = _a.jumpToMatch, jumpToNextMatch = _a.jumpToNextMatch, jumpToPreviousMatch = _a.jumpToPreviousMatch, searchFor = _a.searchFor, setKeywords = _a.setKeywords, setTargetPages = _a.setTargetPages;\n    var SearchDecorator = function (props) { return React__namespace.createElement(Search, __assign({}, props, { store: store })); };\n    var ShowSearchPopoverDecorator = function (props) { return (React__namespace.createElement(ShowSearchPopover, __assign({ enableShortcuts: searchPluginProps.enableShortcuts }, props, { store: store }))); };\n    var ShowSearchPopoverButtonDecorator = function () { return (React__namespace.createElement(ShowSearchPopoverDecorator, null, function (props) { return (React__namespace.createElement(ShowSearchPopoverButton, __assign({ enableShortcuts: searchPluginProps.enableShortcuts, store: store }, props))); })); };\n    var renderViewer = function (renderViewerProps) {\n        var currentSlot = renderViewerProps.slot;\n        if (currentSlot.subSlot) {\n            currentSlot.subSlot.children = (React__namespace.createElement(React__namespace.Fragment, null,\n                searchPluginProps.enableShortcuts && (React__namespace.createElement(ShortcutHandler, { containerRef: renderViewerProps.containerRef, store: store })),\n                currentSlot.subSlot.children));\n        }\n        return currentSlot;\n    };\n    var renderPageLayer = function (renderProps) { return (React__namespace.createElement(Highlights, { key: renderProps.pageIndex, numPages: renderProps.doc.numPages, pageIndex: renderProps.pageIndex, renderHighlights: props === null || props === void 0 ? void 0 : props.renderHighlights, store: store, onHighlightKeyword: searchPluginProps.onHighlightKeyword })); };\n    return {\n        install: function (pluginFunctions) {\n            var initialKeyword = props && props.keyword ? (Array.isArray(props.keyword) ? props.keyword : [props.keyword]) : [];\n            var keyword = props && props.keyword ? normalizeKeywords(props.keyword) : [EMPTY_KEYWORD_REGEXP];\n            store.update('initialKeyword', initialKeyword);\n            store.update('jumpToDestination', pluginFunctions.jumpToDestination);\n            store.update('jumpToPage', pluginFunctions.jumpToPage);\n            store.update('keyword', keyword);\n        },\n        renderPageLayer: renderPageLayer,\n        renderViewer: renderViewer,\n        uninstall: function (props) {\n            var renderStatus = store.get('renderStatus');\n            if (renderStatus) {\n                renderStatus.clear();\n            }\n        },\n        onDocumentLoad: function (props) {\n            store.update('doc', props.doc);\n        },\n        onTextLayerRender: function (props) {\n            var renderStatus = store.get('renderStatus');\n            if (renderStatus) {\n                renderStatus = renderStatus.set(props.pageIndex, props);\n                store.update('renderStatus', renderStatus);\n            }\n        },\n        Search: SearchDecorator,\n        ShowSearchPopover: ShowSearchPopoverDecorator,\n        ShowSearchPopoverButton: ShowSearchPopoverButtonDecorator,\n        clearHighlights: function () {\n            clearKeyword();\n        },\n        highlight: function (keyword) {\n            var keywords = Array.isArray(keyword) ? keyword : [keyword];\n            setKeywords(keywords);\n            return searchFor(keywords);\n        },\n        jumpToMatch: jumpToMatch,\n        jumpToNextMatch: jumpToNextMatch,\n        jumpToPreviousMatch: jumpToPreviousMatch,\n        setTargetPages: setTargetPages,\n    };\n};\n\nexports.NextIcon = NextIcon;\nexports.PreviousIcon = PreviousIcon;\nexports.SearchIcon = SearchIcon;\nexports.searchPlugin = searchPlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@react-pdf-viewer+search@3.12.0_pdfjs-dist@3.4.120_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@react-pdf-viewer/search/lib/cjs/search.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@react-pdf-viewer+search@3.12.0_pdfjs-dist@3.4.120_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@react-pdf-viewer/search/lib/index.js":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-pdf-viewer+search@3.12.0_pdfjs-dist@3.4.120_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@react-pdf-viewer/search/lib/index.js ***!
  \******************************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2023 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/search.js */ \"(ssr)/./node_modules/.pnpm/@react-pdf-viewer+search@3.12.0_pdfjs-dist@3.4.120_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@react-pdf-viewer/search/lib/cjs/search.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHJlYWN0LXBkZi12aWV3ZXIrc2VhcmNoQDMuMTIuMF9wZGZqcy1kaXN0QDMuNC4xMjBfcmVhY3QtZG9tQDE5LjAuMF9yZWFjdEAxOS4wLjBfX3JlYWN0QDE5LjAuMC9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvc2VhcmNoL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLElBQUksZ1BBQTJDO0FBQy9DIiwic291cmNlcyI6WyIvaG9tZS9ub2UtY2FtcG8vZGVsb3MvcHJvamV0L2xhYi1rcy9rcy1sYWIvbm9kZV9tb2R1bGVzLy5wbnBtL0ByZWFjdC1wZGYtdmlld2VyK3NlYXJjaEAzLjEyLjBfcGRmanMtZGlzdEAzLjQuMTIwX3JlYWN0LWRvbUAxOS4wLjBfcmVhY3RAMTkuMC4wX19yZWFjdEAxOS4wLjAvbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYtdmlld2VyL3NlYXJjaC9saWIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIFJlYWN0IGNvbXBvbmVudCB0byB2aWV3IGEgUERGIGRvY3VtZW50XG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0LXBkZi12aWV3ZXIuZGV2XG4gKiBAbGljZW5zZSBodHRwczovL3JlYWN0LXBkZi12aWV3ZXIuZGV2L2xpY2Vuc2VcbiAqIEBjb3B5cmlnaHQgMjAxOS0yMDIzIE5ndXllbiBIdXUgUGh1b2MgPG1lQHBodW9jLm5nPlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NlYXJjaC5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zZWFyY2guanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@react-pdf-viewer+search@3.12.0_pdfjs-dist@3.4.120_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@react-pdf-viewer/search/lib/index.js\n");

/***/ })

};
;